<?php
/**
 * Created by PhpStorm.
 * User: Longder
 * Date: 2017/10/19
 * Time: 15:02
 */

/**
 * 定义一个类
 * Class Person
 * $this变量：指代当前对象
 */
class Person
{
    public $name = "";

    function getName()
    {
        return $this->name;
    }

    function setName($newName)
    {
        $this->name = $newName;
    }

    //final关键字修饰的方法无法被子类重写
    final function test()
    {

    }
}

class Child extends Person
{
    //语法错误
//    function test(){
//
//    }

}

/**
 * Class HTMLStuff
 * 声明静态方法
 */
class HTMLStuff
{
    static function startTable()
    {
        echo "<table border='1'>";
    }

    static function endTable()
    {
        echo "</table>";
    }
}

//调用静态方法
HTMLStuff::startTable();
HTMLStuff::endTable();

/**
 * Class Animal
 * 访问修饰符
 */
class Animal
{
    public $age;
    //静态变量
    public static $global = 23;
    //类中定义常量，一旦赋值不可改变
    private const TYPE_CASH = 1;


    public function __construct()
    {
        //在内部访问静态变量
        self::$global;
        //访问常量
        self::TYPE_CASH;
        $this->age = 0;
    }

    public function incrementAge()
    {
        $this->age += 1;
        $this->ageChanged();
    }

    protected function decrementAge()
    {
        $this->age -= 1;
        $this->ageChanged();

    }

    private function ageChanged()
    {
        echo "Age changed to {$this->age}";

    }
}

class Aoo{
    public function t1(){

    }
}
//继承
class Boo extends Aoo{
    //方法重写
    public function t1(){
        //调用父类中的方法
        parent::t1(); // TODO: Change the autogenerated stub
    }
    public function t2(){
        self::t1();//这是调用Boo中自己的t1()
        $this->t1();
    }
}





















